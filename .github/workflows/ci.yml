name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        deno-version: ["1.40.x", "1.x"]

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup Deno ${{ matrix.deno-version }}
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb
        with:
          deno-version: ${{ matrix.deno-version }}

      - name: Verify Deno installation
        run: deno --version

      - name: Cache Deno dependencies
        run: deno cache --reload main.ts

      - name: Run type check
        run: deno check main.ts **/*.ts

      - name: Run tests
        run: deno test --allow-all --coverage

      - name: Generate coverage report
        run: deno coverage --lcov --output=coverage.lcov
        if: matrix.deno-version == '1.x'

      - name: Upload coverage reports
        uses: codecov/codecov-action@b9fd7d16f6d7d1b5d2bec1a2887e65ceed900238
        if: matrix.deno-version == '1.x'
        with:
          file: coverage.lcov
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build executable
        run: deno compile --allow-all --output=sadie main.ts
        if: matrix.deno-version == '1.x'

      - name: Upload build artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02
        if: matrix.deno-version == '1.x'
        with:
          name: build-artifacts
          path: |
            sadie
            sadie.exe
          retention-days: 1

  lint:
    name: Lint and Format
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Setup Deno
        uses: denoland/setup-deno@e95548e56dfa95d4e1a28d6f422fafe75c4c26fb
        with:
          deno-version: 1.x

      - name: Setup Biome
        uses: biomejs/setup-biome@454fa0d884737805f48d7dc236c1761a0ac3cc13
        with:
          version: latest

      - name: Cache Deno dependencies
        run: deno cache --reload main.ts

      - name: Check Deno formatting
        run: deno fmt --check

      - name: Run Deno linting
        run: deno lint

      - name: Run Biome checks
        run: biome check --apply=unsafe .

      - name: Verify no changes after Biome
        run: |
          if ! git diff --quiet; then
            echo "Biome made changes. Please run 'biome check --apply=unsafe .' locally and commit."
            git diff
            exit 1
          fi

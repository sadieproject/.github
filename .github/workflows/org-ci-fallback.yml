name: Org CI Fallback

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  fallback:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955

      - name: Set up Node.js
        if: ${{ hashFiles('package.json') != '' }}
        uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020
        with:
          node-version: '20'

      - name: Install Node dependencies
        if: ${{ hashFiles('package.json') != '' }}
        run: npm ci

      - name: Run Node tests
        if: ${{ hashFiles('package.json') != '' }}
        run: npm test --if-present

      - name: Set up Python
        if: ${{ hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != '' }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        if: ${{ hashFiles('requirements.txt') != '' }}
        run: pip install -r requirements.txt

      - name: Install Python dependencies (pyproject)
        if: ${{ hashFiles('pyproject.toml') != '' }}
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run Python tests
        if: ${{ hashFiles('requirements.txt') != '' || hashFiles('pyproject.toml') != '' }}
        run: |
          if [ -f pytest.ini ] || [ -f tox.ini ] || [ -f setup.cfg ]; then
            pytest -q
          fi
